#coding:utf-8import osimport sysimport timeimport randomfrom mutagen.mp3 import MP3import var_setimport shutilimport _threadpath = var_set.pathrtmp = var_set.rtmplive_code = var_set.live_codedeviceType = var_set.deviceTypedef get_v():    if deviceType == "pi":        return "h264_omx"    elif deviceType == "vps":        return "libx264"while True:    try:        files = os.listdir(path+'/downloads')        files.sort()        for f in files:            if((f.find('.mp3') != -1) and (f.find('.download') == -1)):                print(path+'/downloads/'+f)                seconds = 600                bitrate = 0                try:                    audio = MP3(path+'/downloads/'+f)   #get MP3 files info                    seconds=audio.info.length   #get MP3 time info                    bitrate=audio.info.bitrate  #get MP3 bitrate info                except Exception as e:                    print(e)                    bitrate = 99999999999                print('mp3 long:'+convert_time(seconds))                if((seconds > 600) | (bitrate > 400000)):  #More than ten minutes will not play / bitrate limit below 400k                    print('too long/too big,delete')                                        if os.path.isfile(path+'/downloads/'+f.replace(".mp3",'')+'.jpg'):                        print('ffmpeg -threads 0 -re -loop 1 -r 2 -t '+str(int(seconds))+' -f image2 -i "'+path+'/downloads/'+f.replace(".mp3",'')+'.jpg'+'[result]" -i "'+path+'/downloads/'+f+'" -map "[result]" -map 2,0 -pix_fmt yuv420p -preset ultrafast -maxrate '+var_set.maxbitrate+'k -acodec copy -c:v h264_omx -f flv "'+rtmp+live_code+'"')                        os.system('ffmpeg -threads 0 -re -loop 1 -r 2 -t '+str(int(seconds))+' -f image2 -i "'+path+'/downloads/'+f.replace(".mp3",'')+'.jpg'+'[result]" -i "'+path+'/downloads/'+f+'" -map "[result]" -map 2,0 -pix_fmt yuv420p -preset ultrafast -maxrate '+var_set.maxbitrate+'k -acodec copy -c:v h264_omx -f flv "'+rtmp+live_code+'"')                    except Exception as e:                        print(e)                break            if((f.find('ok.flv') != -1) and (f.find('.download') == -1) and (f.find('rendering') == -1)):                print('flv:'+f)                print('ffmpeg -threads 0 -re -i "'+path+"/downloads/"+f+'" -vcodec copy -acodec copy -f flv "'+rtmp+live_code+'"')                os.system('ffmpeg -threads 0 -re -i "'+path+"/downloads/"+f+'" -vcodec copy -acodec copy -f flv "'+rtmp+live_code+'"')                                _thread.start_new_thread(remove_v, (f.replace("ok",""),))                break